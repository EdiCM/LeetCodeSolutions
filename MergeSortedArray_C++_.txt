// https://leetcode.com/problems/merge-sorted-array/description/

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {

        int j = 0;

        for (int i = m; i < m + n; i++) {
            swap(nums1[i], nums2[j]);
            j++;
        }
        sort(nums1.begin(), nums1.end());

        // trasverse nums1 with i and j is a helping index 
        // trasversing nums2
        // if n is zero then break
        // duplicates, increasing
        // merge nums1 and nums2 in nums2
        // not return anything, just move the numbers

        // if nums1[i] == 0 and j < nums2.size swap them and increment j
        // is nums1[i] less or equal to nums2[j] = 
        // leave it
        // if not, swap them
        // 1 2 2 3 5 6     0 0 0
        //           i         j
    }
};